{"version":3,"file":"static/js/542.6228e5c3.chunk.js","mappings":"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","sources":["components/profile/Profile.module.css","webpack://project1/./src/components/profile/MyPosts/MyPosts.module.css?21c2","webpack://project1/./src/components/profile/MyPosts/Post/Post.module.css?3dca","components/profile/MyPosts/Post/Post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/MyPosts/MyPostsContainer.jsx","webpack://project1/./src/components/profile/Profileinfo/Profileinfo.module.css?f418","components/profile/Profileinfo/ProfileStatusWithHooks.jsx","components/profile/Profileinfo/Profileinfo.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__e5nrM\",\"but\":\"MyPosts_but__ChAzZ\",\"posts\":\"MyPosts_posts__7a124\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__weWp5\"};","import so from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={so.item}>\r\n            {props.message}\r\n            <button>Like</button>Кол-во лайков: {props.likecount}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import so from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React ,{} from 'react';\r\nimport {reduxForm,Field} from 'redux-form'\r\nimport {maxLengthCreator, requered} from './../../../utials/validators/validators'\r\nimport {Textaria} from './../../common/formsControls/formsControsl'\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textaria} name='post' placeholder='Пост' value={props.newPostText} validate={[requered,maxLength10]} />\r\n            <br />\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({\r\n    form:'ProfileAddPostForm'\r\n})(MyPostsForm)\r\n\r\nlet MyPosts = React.memo((props) => {\r\n    /*\r\n    shouldComponentUpdate(nextProps,nextState) {\r\n        return nextProps !== this.props || nextState !== this.state\r\n    }\r\n    */\r\n        console.log('render')\r\n        let postsElements = props.posts.map( post => <Post message={post.message} key={post.id} likecount={post.likesCount}/>)\r\n        \r\n        const onAddPosts = (formData) => {\r\n            props.addPost(formData.post)\r\n        }   \r\n\r\n        return (\r\n            <div className={so.postsBlock}>\r\n                <div>\r\n                    My posts\r\n                </div>\r\n                    <MyPostsReduxForm onSubmit={onAddPosts}/>\r\n                <div className={so.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\nexport default MyPosts","import MyPosts from './MyPosts';\r\nimport {addPostActionCreater} from '../../../redux/profile-reducer'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (post) => {\r\n            dispatch(addPostActionCreater(post));\r\n        }\r\n    }\r\n}\r\nlet MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Profileinfo_img__SaBmI\",\"descBlock\":\"Profileinfo_descBlock__Dr6SS\"};","import React,{useEffect, useState} from 'react'\r\n\r\nlet ProfileStatusWithHooks = (props) => {\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    \r\n    useEffect(() => {\r\n            setStatus(props.status)\r\n      },[props.status]);\r\n\r\n        return(\r\n            <div>\r\n                {!editMode\r\n                ?<span onDoubleClick={activateEditMode}>{!props.status?'Статуса нет':props.status}</span>\r\n                :<input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status} ></input>}\r\n            </div>\r\n        )\r\n    }\r\nexport default ProfileStatusWithHooks;","import so from './Profileinfo.module.css';\r\nimport Preloader from './../../common/preloader/Preloader'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return(\r\n        <div>\r\n            <img className={so.img} src=\"https://proprikol.ru/wp-content/uploads/2020/08/kartinki-krutyh-mashin-57.jpg\" alt=\"main\"/>\r\n            <div className={so.descBlock}>\r\n                <img src={props.profile.photos.large} alt=\"ava\"/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import so from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './Profileinfo/Profileinfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return(\r\n        <section className={so.section}> \r\n        <h2>{props.h}</h2>\r\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n                <MyPostsContainer/>\r\n        </section>\r\n    )\r\n}\r\nexport default Profile;","import Profile from './Profile';\r\nimport React from 'react';\r\nimport {connect}  from 'react-redux';\r\nimport {getProfile,getStatus,updateStatus} from './../../redux/profile-reducer'\r\nimport {withAuthRedirect} from './../../hoc/withAuthRedirect'\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n  } from \"react-router-dom\";\r\nimport {compose} from 'redux'\r\n\r\n  function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\ncomponentDidMount() {\r\n    let profileId = this.props.router.params.userId;\r\n    if(!profileId) {\r\n        profileId = this.props.userId;\r\n        //if(!profileId) {\r\n        //    window.location.href = window.location.protocol+ \"//\" + window.location.host + '/login'\r\n        //}\r\n    }\r\n    this.props.getProfile(profileId);\r\n    this.props.getStatus(profileId);\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile:state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n    userId:state.auth.userId,\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getProfile,getStatus,updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import { Navigate } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport {connect}  from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Comonent) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Comonent {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","className","so","message","likecount","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textaria","name","placeholder","value","newPostText","validate","requered","React","console","log","postsElements","posts","map","post","likesCount","id","formData","addPost","connect","state","profilePage","dispatch","addPostActionCreater","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","onDoubleClick","profile","src","alt","photos","large","Preloader","h","ProfileContainer","profileId","this","router","params","userId","getProfile","getStatus","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","Comonent","RedirectComponent","to"],"sourceRoot":""}