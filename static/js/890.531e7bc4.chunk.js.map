{"version":3,"file":"static/js/890.531e7bc4.chunk.js","mappings":"kKACA,EAA0B,yBAA1B,EAA4D,wBAA5D,EAA6F,wBAA7F,EAAgI,0BAAhI,EAAmK,wB,SCQnK,EAPgB,SAACA,GACb,OACI,wBAAKA,EAAMC,SAEnB,E,UCOA,EATmB,SAACD,GAChB,OACI,eAAIE,UAAWC,EAAW,IAAMA,EAAS,UACxC,SAAC,KAAO,CAACC,GAAI,YAAcJ,EAAMK,GAAG,SAAEL,EAAMM,QAGrD,E,uCCFMC,GAAcC,EAAAA,EAAAA,GAAiB,IA2CjCC,GAAmBC,EAAAA,EAAAA,GAAU,CAC7BC,KAAK,wBADcD,EATN,SAACV,GACd,OACI,kBAAMY,SAAUZ,EAAMa,aAAa,WAC/B,SAACC,EAAA,EAAK,CAACR,KAAK,UAAUS,UAAWC,EAAAA,GAAUC,YAAa,qBAAsBC,SAAU,CAACC,EAAAA,EAASZ,MACtG,mBACA,4BAAQ,WAGhB,IAKA,EA9CgB,SAACP,GAEb,IAAIoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QACvBC,KAAK,SAAAC,GAAM,OAAI,SAAC,EAAU,CAACnB,KAAMmB,EAAOnB,KAAsBD,GAAIoB,EAAOpB,IAAtBoB,EAAOpB,GAAqB,IAEhFqB,EAAmBN,EAAMO,SACxBH,KAAK,SAAAvB,GAAO,OAAI,SAAC,EAAO,CAACA,QAASA,EAAQA,SAAcA,EAAQI,GAAK,IAQtE,OACA,gCACI,wBAAKL,EAAM4B,KACX,iBAAK1B,UAAWC,EAAS,WACjB,eAAKD,UAAWC,EAAU,SACrBmB,KAEL,gBAAIpB,UAAWC,EAAW,UACrBuB,GACD,SAACjB,EAAgB,CAACG,SAZvB,SAACiB,GACZ7B,EAAM8B,WAAWD,EAAS5B,QAC9B,YAiBJ,E,8BCtBA,GAAe8B,E,QAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACZ,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IACyB,SAACY,GACtB,MAAO,CACHH,WAAY,SAAC7B,GACTgC,GAASC,EAAAA,EAAAA,IAAwBjC,GACrC,EAER,IAIIkC,EAAAA,EAFJ,CAGEC,E,kJClBEC,EAA6B,SAACjB,GAAK,MAAM,CACzCkB,OAAOlB,EAAMmB,KAAKD,OACrB,EAEYH,EAAmB,SAACK,GAAc,IACrCC,EAAiB,qGAIlB,OAJkB,8BACnB,WACI,OAAIC,KAAK1C,MAAMsC,QACR,SAACE,GAAQ,UAAKE,KAAK1C,SADI,SAAC,KAAQ,CAACI,GAAG,UAE/C,KAAC,EAJkB,CAASuC,EAAAA,WAOhC,OADqCX,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS,EAE7E,C","sources":["webpack://project1/./src/components/dialogs/Dialogs.module.css?04a9","components/dialogs/Message/Message.jsx","components/dialogs/DialogItem/DialogItem.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ji3CC\",\"dialog\":\"Dialogs_dialog__IT1ay\",\"active\":\"Dialogs_active__og07G\",\"messages\":\"Dialogs_messages__TG9cX\",\"parent\":\"Dialogs_parent__nBIE+\"};","//import s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return ( \r\n        <li>{props.message}</li>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return ( \r\n        <li className={s.dialog + ' ' + s.active}>\r\n         <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport {reduxForm,Field} from 'redux-form'\r\nimport {Textaria} from './../common/formsControls/formsControsl'\r\nimport {maxLengthCreator, requered} from './../../utials/validators/validators'\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\nconst Dialogs = (props) =>{\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    \r\n    let messagesElements = state.messages\r\n        .map( message => <Message message={message.message} key={message.id}/>);  \r\n        \r\n\r\n\r\n        \r\n    let onSubmit = (formData) => {\r\n        props.addMessage(formData.message);\r\n    }\r\n        return (\r\n        <section>\r\n            <h2>{props.h}</h2>\r\n            <div className={s.parent}>\r\n                    <ul  className={s.dialogs}>\r\n                        {dialogsElements}\r\n                    </ul>\r\n                    <ul className={s.messages}>\r\n                        {messagesElements}\r\n                        <MessageReduxForm onSubmit={onSubmit}/>\r\n                    </ul>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\nlet dialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='message' component={Textaria} placeholder={'Enter your message'} validate={[requered,maxLength20]}/>\r\n        <br />\r\n        <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\nlet MessageReduxForm = reduxForm({\r\n    form:'DialogAddMessageForm'\r\n})(dialogForm)\r\n\r\nexport default Dialogs","import Dialogs from './Dialogs';\r\nimport {addMessageActionCreater } from './../../redux/dialogs-reducer'\r\nimport {connect}  from 'react-redux'\r\nimport {withAuthRedirect} from './../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageActionCreater(message))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import { Navigate } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport {connect}  from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Comonent) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Comonent {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","message","className","s","to","id","name","maxLength20","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textaria","placeholder","validate","requered","state","dialogsPage","dialogsElements","dialogs","map","dialog","messagesElements","messages","h","formData","addMessage","compose","connect","dispatch","addMessageActionCreater","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Comonent","RedirectComponent","this","React"],"sourceRoot":""}